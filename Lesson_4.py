'''
Занятие 4
Задания на первую неделю.

1. Напишите функцию, проверяющую, является ли введённая через input() буква гласной
    или согласной.
2. Напишите класс Student, который предусматривает аттрибуты объекта: имя, дату
    рождения и будущую специальность. Создайте объект, описывающий какого-нибудь
    студента (Наприме, Вас или выдуманного человека)
3. Допишите класс Studen, добавьте метод, опредлеяющий возвраст студента 
    (для определения сегодняшней даты используйте модуль datatime)
4. Напишите функцию, которая будет запрашивать у пользователя целые положительные 
    (натуральные) числа по одному, пока пользователь не введёт 0 (ноль). В конце
    посчитайте сумму и среднее арифметическкое введённых чисел.
5. Напишите функцию, которая по дате, вводимой в форме "20.02.2002" будет писать
    дату следующего дня. Важно: 
        * год, номер которого кратен 400 - високосный;
        * остальные годы, номер которых кратен 100 - невисокосные;
        * остальные годые, номер которых кратен 4 - високосные;
        * все остальные годы - невисокосные.
'''

'''Задание 1.
Напишите функцию, проверяющую, является ли введённая через input() буква гласной
    или согласной.
'''
def check_letter():
    list_vowels = ('а','е','и','о','у','ё','ю','я')
    list_consonants = ('б', 'в', 'г', 'д', 'ж', 'з', 'й', 'к', 'л', 'м', 'н', 'п', 'р', 'с', 'т', 'ф', 'х', 'ц', 'ч', 'ш', 'щ')

    input_char = input('Введите букву русского языка: ')
    
    lower_char = input_char.lower()

    if lower_char in list_vowels:
        print(input_char, 'является гласной')
    elif lower_char in list_consonants:
        print(input_char, 'является согласной')
    else:
        print('Введена не буква русского языка')


print('Задание 1.')
check_letter()


'''Задание 2.
Напишите класс Student, который предусматривает аттрибуты объекта: имя, дату
    рождения и будущую специальность. Создайте объект, описывающий какого-нибудь
    студента (Наприме, Вас или выдуманного человека).
3. Допишите класс Studen, добавьте метод, опредлеяющий возвраст студента 
    (для определения сегодняшней даты используйте модуль datatime)
'''
import datetime


class Student():    
    def __init__(self, name:str, date_of_birth:datetime.date, desired_specialty:str):
        self.name = name
        self.date_of_birth = date_of_birth
        self.specialization = desired_specialty

    def get_age(self):
        today = datetime.date.today()
        # Получаем количество лет и вычитаем год, если ДР ещё не наступил в этом году
        age = today.year - self.date_of_birth.year - (
            (today.month, today.day) < (self.date_of_birth.month, self.date_of_birth.day))

        return age
        

victor = Student('Виктор', datetime.date(2000, 7, 29), 'Сеньор')

print(victor.get_age())

''' Задание 4.
Напишите функцию, которая будет запрашивать у пользователя целые положительные 
    (натуральные) числа по одному, пока пользователь не введёт 0 (ноль). В конце
    посчитайте сумму и среднее арифметическкое введённых чисел.
'''

def get_natural_nums():
    input_num = None
    counter = 0
    sum = 0
    
    while True:
        input_num = input('Введите целое положительное (натуральное) число: ')

        if input_num == '0':
            if counter == 0:
                counter = 1
            print('Сумма:', sum, '\nСр. арифметическое:', sum/counter)
            return

        num = int(input_num)
        counter += 1
        sum += num

get_natural_nums()

'''Задание 5. Напишите функцию, которая по дате, вводимой в форме "20.02.2002" будет писать
    дату следующего дня. Важно: 
        * год, номер которого кратен 400 - високосный;
        * остальные годы, номер которых кратен 100 - невисокосные;
        * остальные годые, номер которых кратен 4 - високосные;
        * все остальные годы - невисокосные.
'''

def get_next_day(today):
    today = datetime.date(int(today[2]), int(today[1]), int(today[0]))
    next_day = today + datetime.timedelta(days=1.)
        
    return next_day.strftime('%d.%m.%Y')


today = input('Введите дату в формате "20.02.2002": ')
today = today.strip().split('.')
print('Следующий день: ', get_next_day(today))
